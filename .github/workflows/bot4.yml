name: Bot 'Mooncake'
on:
  push:
    branches:
      - bitcoin-js

jobs:
  check-org-member:
    runs-on: ubuntu-latest
    name: "check if member is from LedgerHQ"
    steps:
      - uses: ledgerhq/actions/packages/is-org-member@main
        with:
          user: ${{ github.actor }}
          organisation: ledgerhq
          token: ${{ github.token }}

  start-runner:
    name: "start ec2 instance (Linux)"
    needs: [check-org-member]
    if: ${{ success() }}
    uses: ledgerhq/actions/.github/workflows/start-linux-runner.yml@main
    secrets:
      CI_BOT_TOKEN: ${{ secrets.CI_BOT_TOKEN }}

  stop-runner:
    name: "stop ec2 instance (Linux)"
    needs: [check-org-member, start-runner, run-bot]
    uses: ledgerhq/actions/.github/workflows/stop-linux-runner.yml@main
    if: ${{ always() && needs.check-org-member.result == "failure" }}
    with:
      label: ${{ needs.start-runner.outputs.label }}
      ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
    secrets:
      CI_BOT_TOKEN: ${{ secrets.CI_BOT_TOKEN }}

  run-bot-hosted:
    needs: [start-runner]
    runs-on: ${{ needs.start-runner.outputs.label }}
    steps:
      - name: prepare runner
        run: |
          sudo growpart /dev/nvme0n1 1
          sudo resize2fs /dev/nvme0n1p1
      - uses: actions/checkout@v2
      - name: Retrieving coin apps
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/coin-apps
          token: ${{ secrets.PAT }}
          path: coin-apps
      - uses: actions/setup-node@master
        with:
          node-version: 14.x
          cache: yarn
      - name: install yarn
        run: npm i -g yarn
      - name: pull docker image
        run: docker pull ghcr.io/ledgerhq/speculos
      - name: kill apt-get
        run: sudo killall -w apt-get apt || echo OK
      - name: Install linux deps
        run: sudo apt-get install -y libusb-1.0-0-dev jq
      - name: Install dependencies
        run: |
          yarn global add yalc
          yarn --frozen-lockfile
          yarn ci-setup-cli
      - name: BOT
        env:
          SHOW_LEGACY_NEW_ACCOUNT: "1"
          DEBUG_HTTP_RESPONSE: "1"
          SEED: ${{ secrets.SEED4 }}
          VERBOSE_FILE: bot-tests.txt
          GITHUB_SHA: ${GITHUB_SHA}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_WORKFLOW: ${{ github.workflow }}
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
          SLACK_CHANNEL: live-ft-bitcoin-js
          BOT_FILTER_FAMILY: bitcoin
          EXPERIMENTAL_EXPLORERS: true
          EXPERIMENTAL_CURRENCIES_JS_BRIDGE: bitcoin,bitcoin_cash,bsc,litecoin,dash,qtum,zcash,bitcoin_gold,stratis,dogecoin,digibyte,komodo,pivx,zencash,vertcoin,peercoin,viacoin,stakenet,stealthcoin,decred,bitcoin_testnet,tezos
        run: COINAPPS=$PWD/coin-apps yarn ci-test-bot
        timeout-minutes: 120
      - name: Run coverage
        if: failure() || success()
        run: CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }} npx codecov
      - name: upload logs
        if: failure() || success()
        uses: actions/upload-artifact@v1
        with:
          name: bot-tests.txt
          path: bot-tests.txt

  run-bot:
    needs: [check-org-member]
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Retrieving coin apps
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/coin-apps
          token: ${{ secrets.PAT }}
          path: coin-apps
      - uses: actions/setup-node@master
        with:
          node-version: 14.x
          cache: yarn
      - name: pull docker image
        run: docker pull ghcr.io/ledgerhq/speculos
      - name: Install linux deps
        run: sudo apt-get install -y libusb-1.0-0-dev jq
      - name: Install dependencies
        run: |
          yarn global add yalc
          yarn --frozen-lockfile
          yarn ci-setup-cli
      - name: BOT
        env:
          SHOW_LEGACY_NEW_ACCOUNT: "1"
          DEBUG_HTTP_RESPONSE: "1"
          SEED: ${{ secrets.SEED4 }}
          VERBOSE_FILE: bot-tests.txt
          GITHUB_SHA: ${GITHUB_SHA}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_WORKFLOW: ${{ github.workflow }}
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
          SLACK_CHANNEL: live-ft-bitcoin-js
          BOT_FILTER_FAMILY: bitcoin
          EXPERIMENTAL_EXPLORERS: true
          EXPERIMENTAL_CURRENCIES_JS_BRIDGE: bitcoin,bitcoin_cash,bsc,litecoin,dash,qtum,zcash,bitcoin_gold,stratis,dogecoin,digibyte,komodo,pivx,zencash,vertcoin,peercoin,viacoin,stakenet,stealthcoin,decred,bitcoin_testnet,tezos
        run: COINAPPS=$PWD/coin-apps yarn ci-test-bot
        timeout-minutes: 120
      - name: Run coverage
        if: failure() || success()
        run: CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }} npx codecov
      - name: upload logs
        if: failure() || success()
        uses: actions/upload-artifact@v1
        with:
          name: bot-tests.txt
          path: bot-tests.txt
